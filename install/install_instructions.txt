### These instructions assume that you are running Debian 9. After completing these instructions
### you will have a basic installation with database and webserver.

### setup berlussimo web app on nginx

# login as root

# upgrade debian
apt update
apt upgrade
apt dist-upgrade

# the following command restarts the server
shutdown -r now

# install npm
apt install curl
curl -sL https://deb.nodesource.com/setup_8.x | bash -
apt install -y nodejs

# install nginx and dependencies
apt install nginx libnginx-mod-nchan git nasm pwgen
apt install php7.0 php7.0-gd php7.0-mysql php7.0-fpm php7.0-xml php7.0-mbstring php7.0-curl php7.0-bcmath php7.0-zip
cd /var/www/; git clone https://github.com/BerlusGmbH/Berlussimo berlussimo
cd /var/www/berlussimo/; git checkout develop

# install MySQL. The setup will let you set a root password for the mySQL server. You will need this later.
apt-get install mariadb-server

### import database schema. Theese instructions will create a database named berlussimo.
### Set this name to reflect your settings from config.inc.php
### You will be prompted for the root password set above.
mysqladmin create -u root berlussimo

#  generate password for mariadb user
pwgen 20 1

# log into mariadb and create berlussimo user

mysql
MariaDB [(none)]> CREATE USER 'berlussimo'@'localhost' IDENTIFIED BY '<password generated above>';

# grant new user privileges
MariaDB [(none)]> GRANT ALL ON berlussimo.* TO 'berlussimo'@'localhost';

mysql berlussimo < /var/www/berlussimo/install/DB-Version-0.4.0/berlussimo_db_0.4.0.sql
mysql berlussimo < /var/www/berlussimo/install/DB-Version-0.4.0/berlussimo_db_0.4.1.sql
mysql berlussimo < /var/www/berlussimo/install/DB-Version-0.4.0/berlussimo_db_0.4.2.sql
mysql berlussimo < /var/www/berlussimo/install/DB-Version-0.4.0/berlussimo_db_0.4.3.sql

#edit config to fit your mysql config
#'mysql' => [
#            'driver' => 'mysql',
#            'host' => env('DB_HOST', 'localhost'),
#            'port' => env('DB_PORT', '3306'),
#            'database' => env('DB_DATABASE', 'berlussimo'),
#            'username' => env('DB_USERNAME', 'root'),
#            'password' => env('DB_PASSWORD', '<your_password_set_above>'),
#            'charset' => 'utf8mb4',
#            'collation' => 'utf8mb4_unicode_ci',
#            'prefix' => '',
#            'strict' => false,
#            'engine' => null,
#        ],
nano /var/www/berlussimo/config/database.php

#install composer and fetch dependencies
curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
cd /var/www/berlussimo/

composer install

echo "APP_KEY=" > .env
php artisan key:generate

php artisan migrate
php artisan optimize
php artisan route:cache
php artisan parser:generate

# if you setup a fresh database
php artisan passport:install
# else if you only setup a fresh webserver
php artisan passport:keys

# install libpng12
wget http://ftp.de.debian.org/debian/pool/main/libp/libpng/libpng12-0_1.2.50-2+deb8u3_amd64.deb -P /tmp/
apt install /tmp/libpng12-0_1.2.50-2+deb8u3_amd64.deb

# install node dependencies
npm install

# build javascript app
npm run prod

#make web directory writeable by the webserver
chown -R www-data:www-data /var/www/berlussimo

# edit default (/etc/nginx/sites-available/default) site to
# reflect settings from install/config/nginx/default
nano /etc/nginx/sites-available/default
systemctl restart nginx

# copy install/config/systemd/laravell-queue.service to /etc/systemd/system/
cp /var/www/berlussimo/install/config/systemd/laravel-queue.service /etc/systemd/system/

# start laravel queue and enable start on startup
systemctl start laravel-queue
systemctl enable laravel-queue

### you should now be able to open http://<your_server>/ in your browser and login with
# login: admin@berlussimo
# password: password

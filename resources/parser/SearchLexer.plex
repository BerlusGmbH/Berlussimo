<?php

namespace App\Services\SearchParser;

use Exception;

class SearchLexer
{
    public $counter;
    public $token;
    public $value;
    public $node;
    public $line;
    private $data;
    private $state = 1;

    function __construct($data)
    {
        $this->data = $data;
        $this->counter = 0;
        $this->line = 1;
    }

    /*!lex2php
    %input $this->data
    %counter $this->counter
    %token $this->token
    %value $this->value
    %line $this->line
    person_name = ~person.name~
    person_vorname = ~person.vorname~
    person_id = ~person.id~
    einheit_name = ~einheit.name~
    einheit_lage = ~einheit.lage~
    einheit_id = ~einheit.id~
    haus_strasse = ~haus.strasse~
    haus_nummer = ~haus.nummer~
    haus_plz = ~haus.plz~
    haus_ort = ~haus.ort~
    haus_id = ~haus.id~
    objekt_name = ~objekt.name~
    objekt_id = ~objekt.id~
    mietvertrag_von = ~mietvertrag.von~
    mietvertrag_bis = ~mietvertrag.bis~
    mietvertrag_id = ~mietvertrag.id~
    kaufvertrag_von = ~kaufvertrag.von~
    kaufvertrag_bis = ~kaufvertrag.bis~
    kaufvertrag_id = ~kaufvertrag.id~
    eq = ~=~
    like = ~like~
    value = ~(\pL|\pN|\pS|\pP)+~
    whitespace = /\s+/
    */
    /*!lex2php
    %statename START
    whitespace {
      return false;
    }
    person_name {
      $this->token = SearchParser::PERSON_NAME;
    }
    person_vorname {
      $this->token = SearchParser::PERSON_VORNAME;
    }
    person_id {
      $this->token = SearchParser::PERSON_ID;
    }
    einheit_name {
      $this->token = SearchParser::EINHEIT_NAME;
    }
    einheit_lage {
      $this->token = SearchParser::EINHEIT_LAGE;
    }
    einheit_id {
      $this->token = SearchParser::EINHEIT_ID;
    }
    haus_strasse {
      $this->token = SearchParser::HAUS_STRASSE;
    }
    haus_nummer {
      $this->token = SearchParser::HAUS_NUMMER;
    }
    haus_plz {
      $this->token = SearchParser::HAUS_PLZ;
    }
    haus_ort {
      $this->token = SearchParser::HAUS_ORT;
    }
    haus_id {
      $this->token = SearchParser::HAUS_ID;
    }
    objekt_name {
      $this->token = SearchParser::OBJEKT_NAME;
    }
    objekt_id {
      $this->token = SearchParser::OBJEKT_ID;
    }
    mietvertrag_von {
      $this->token = SearchParser::MIETVERTRAG_VON;
    }
    mietvertrag_bis {
      $this->token = SearchParser::MIETVERTRAG_BIS;
    }
    mietvertrag_id {
      $this->token = SearchParser::MIETVERTRAG_ID;
    }
    kaufvertrag_von {
      $this->token = SearchParser::KAUFVERTRAG_VON;
    }
    kaufvertrag_bis {
      $this->token = SearchParser::KAUFVERTRAG_BIS;
    }
    kaufvertrag_id {
      $this->token = SearchParser::KAUFVERTRAG_ID;
    }
    eq {
      $this->token = SearchParser::EQ;
    }
    like {
      $this->token = SearchParser::LIKE;
    }
    value {
      $this->token = SearchParser::VALUE;
    }
    */
}